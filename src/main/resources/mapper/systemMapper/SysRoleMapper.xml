<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.starda.managesystem.mapper.system.SysRoleMapper">
    <resultMap id="BaseResultMap" type="com.starda.managesystem.pojo.SysRole">
        <id column="sys_role_id" jdbcType="INTEGER" property="id"/>
        <result column="sys_role_role_name" jdbcType="VARCHAR" property="role_name"/>
        <result column="sys_role_remark" jdbcType="VARCHAR" property="remark"/>
        <result column="sys_role_status" jdbcType="INTEGER" property="status"/>
        <result column="sys_role_create_time" jdbcType="TIMESTAMP" property="create_time"/>
        <result column="sys_role_modified_time" jdbcType="TIMESTAMP" property="modified_time"/>
        <result column="sys_role_address" jdbcType="VARCHAR" property="address"/>
        <result column="sys_role_address_code" jdbcType="VARCHAR" property="address_code"/>
        <result column="sys_role_role_code" property="role_code"/>
        <result column="sys_role_create_account_id" property="create_account_id"/>
    </resultMap>
    <sql id="Base_Column_List">
        sys_role.id as sys_role_id, sys_role.role_name as sys_role_role_name, sys_role.remark as sys_role_remark,
    sys_role.`status` as `sys_role_status`, sys_role.create_time as sys_role_create_time, 
    sys_role.modified_time as sys_role_modified_time, sys_role.address as sys_role_address, 
    sys_role.address_code as sys_role_address_code, sys_role.role_code as sys_role_role_code,
    sys_role.create_account_id as sys_role_create_account_id
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_role sys_role
        where sys_role.id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from sys_role
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.starda.managesystem.pojo.SysRole"
            useGeneratedKeys="true">
        insert into sys_role (role_name, remark, `status`,
                              create_time, modified_time, address,
                              address_code)
        values (#{role_name,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
                #{create_time,jdbcType=TIMESTAMP}, #{modified_time,jdbcType=TIMESTAMP}, #{address,jdbcType=VARCHAR},
                #{address_code,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.starda.managesystem.pojo.SysRole"
            useGeneratedKeys="true">
        insert into sys_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="role_name != null">
                role_name,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="create_time != null">
                create_time,
            </if>
            <if test="modified_time != null">
                modified_time,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="address_code != null">
                address_code,
            </if>
            <if test="role_code != null">
                role_code,
            </if>
            <if test="create_account_id != null">
                create_account_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="role_name != null">
                #{role_name,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="create_time != null">
                #{create_time,jdbcType=TIMESTAMP},
            </if>
            <if test="modified_time != null">
                #{modified_time,jdbcType=TIMESTAMP},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="address_code != null">
                #{address_code,jdbcType=VARCHAR},
            </if>
            <if test="role_code != null">
                #{role_code},
            </if>
            <if test="create_account_id != null">
                #{create_account_id},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.starda.managesystem.pojo.SysRole">
        update sys_role
        <set>
            <if test="role_name != null">
                role_name = #{role_name,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=INTEGER},
            </if>
            <if test="create_time != null">
                create_time = #{create_time,jdbcType=TIMESTAMP},
            </if>
            <if test="modified_time != null">
                modified_time = #{modified_time,jdbcType=TIMESTAMP},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="address_code != null">
                address_code = #{address_code,jdbcType=VARCHAR},
            </if>
            <if test="role_code != null">
                role_code = #{role_code},
            </if>
            <if test="create_account_id != null">
                create_account_id = #{create_account_id},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.starda.managesystem.pojo.SysRole">
        update sys_role
        set role_name     = #{role_name,jdbcType=VARCHAR},
            remark        = #{remark,jdbcType=VARCHAR},
            `status`      = #{status,jdbcType=INTEGER},
            create_time   = #{create_time,jdbcType=TIMESTAMP},
            modified_time = #{modified_time,jdbcType=TIMESTAMP},
            address       = #{address,jdbcType=VARCHAR},
            address_code  = #{address_code,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!-- 批量修改角色权限 -->
    <update id="updateRoleListById">
        update sys_role
        set `status` = 0
        where id in <foreach collection="roleList" close=")" open="(" separator="," item="id">#{id,jdbcType=INTEGER}</foreach>
    </update>
</mapper>